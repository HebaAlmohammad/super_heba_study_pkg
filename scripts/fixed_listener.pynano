#!/usr/bin/env python
import rospy
import tf
import math
from geometry_msgs.msg import Twist

if __name__ == '__main__':
    rospy.init_node('tf_turtle')
    listener = tf.TransformListener()
    
    turtle_vel = rospy.Publisher('turtle2/cmd_vel', Twist, queue_size=1)
    rate = rospy.Rate(10.0)
    
    while not rospy.is_shutdown():
        try:
            (trans, rot) = listener.lookupTransform('/turtle2', '/carrot', rospy.Time(0))
        except (tf.LookupException, tf.ConnectivityException, tf.ExtrapolationException):
            continue
        
        msg = Twist()
        msg.linear.x = 0.5 * math.sqrt(trans[0]**2 + trans[1]**2)
        msg.angular.z = 4 * math.atan2(trans[1], trans[0])
        turtle_vel.publish(msg)
        rate.sleep()
